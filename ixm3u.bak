#!/usr/bin/perl

use strict;
use warnings;

use Data::Dumper;
$Data::Dumper::Indent = 1;
$Data::Dumper::Quotekeys = 0;

sub d {
    my $text = Dumper(@_);
    1 while $text =~ s/(.*)^([^\n]*)bless\( \{\n(.*?)^(\s*\}), '([^']*)' \)([^\n]*)/$1$2$5 {\n$3$4$6 # $5/ms;
    $text =~ s/IXM3U:://g;
    warn $text;
};

my $DEBUG = 0;
use XML::Parser;

my $p1 = new XML::Parser(Style => 'Objects', Pkg => "IXM3U");

my @files = reverse sort <*.m3u>;
print "<html>\n";
print "<body>\n";
for my $m3u (@files) {
    (my $xml = $m3u) =~ s/m3u$/xml/;
    if (-e $xml) {
	%::chars = ();
	my $root = $p1->parsefile($xml);
	print $root->[0]->html();
	next;
    }
}
print "</body>\n";
print "</html>\n";

package IXM3U::Characters;

sub collect {
    my $self = shift;
    my $text = $self->{Text};
    $text =~ s/\n/ /g;
    $text =~ s/^ +//;
    $text =~ s/ +$//;
    $::chars{$::collect} .= $text;
    return "";
}

package IXM3U::recording;

sub html {
    my $self = shift;
    $::collect = "html";
    my $html = "<p>\n";
    foreach my $kid (@{$$self{Kids}}) {
	$kid->collect();
    }
    my $date = $::chars{date};
    my $link = $::chars{link};
    my $title = $::chars{title};
    my $speaker = $::chars{speaker};
    my $text = $::chars{text};
    my $lect = $::chars{lect};

    my $week = $date;
    $week =~ s/\/0*/-/g;
    $week =~ s/ //g;
    my $lectlink = "lect/cur/wide/html/weeks/WK$week.html";

    if (-e "/home/gloria/public_html/$lectlink") {
	$date = " <a href='http://www.wall.org/~gloria/$lectlink'>$week</a>";
    }
    else {
	warn $lectlink;
    }
    $link =~ s/ +$//;
    $html .= <<"END";
    $date: &nbsp; <a href="$link"><i>$title</i></a>, $speaker<br>
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$text
END
    if ($::chars{lect} =~ /\S/) {
	$html .= " ($lect)";
    }
    $html .= "</p>\n";
}

package IXM3U::link;

sub collect {
    my $self = shift;
    $::collect = "link";
    foreach my $kid (@{$$self{Kids}}) {
	$kid->collect();
    }
}

package IXM3U::date;

sub collect {
    my $self = shift;
    $::collect = "date";
    foreach my $kid (@{$$self{Kids}}) {
	$kid->collect();
    }
}

package IXM3U::speaker;

sub collect {
    my $self = shift;
    $::collect = "speaker";
    foreach my $kid (@{$$self{Kids}}) {
	$kid->collect();
    }
}

package IXM3U::title;

sub collect {
    my $self = shift;
    $::collect = "title";
    foreach my $kid (@{$$self{Kids}}) {
	$kid->collect();
    }
}

package IXM3U::text;

sub collect {
    my $self = shift;
    $::collect = "text";
    foreach my $kid (@{$$self{Kids}}) {
	$kid->collect();
    }
}

package IXM3U::lect;

sub collect {
    my $self = shift;
    $::collect = "lect";
    foreach my $kid (@{$$self{Kids}}) {
	$kid->collect();
    }
}


